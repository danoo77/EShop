// <auto-generated />
using System;
using DmiConsulting.Eshop.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DmiConsulting.Eshop.Infrastructure.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DmiConsulting.Eshop.Core.Entities.OrderAggregation.OrderItemAggregation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OrderTime");

                    b.HasKey("Id");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DmiConsulting.Eshop.Core.Entities.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrderId");

                    b.Property<int?>("OrderedProductId");

                    b.Property<decimal>("Price");

                    b.Property<int>("Quantity");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("OrderedProductId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("DmiConsulting.Eshop.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName");

                    b.Property<string>("Description")
                        .IsRequired();

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(250);

                    b.Property<decimal>("Price");

                    b.HasKey("Id");

                    b.HasIndex("CategoryName");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("DmiConsulting.Eshop.Core.Entities.ProductCategory", b =>
                {
                    b.Property<string>("Name")
                        .ValueGeneratedOnAdd();

                    b.HasKey("Name");

                    b.ToTable("ProductCategories");

                    b.HasData(
                        new
                        {
                            Name = "Dogs"
                        },
                        new
                        {
                            Name = "Cats"
                        },
                        new
                        {
                            Name = "Others"
                        });
                });

            modelBuilder.Entity("DmiConsulting.Eshop.Core.Entities.OrderItem", b =>
                {
                    b.HasOne("DmiConsulting.Eshop.Core.Entities.OrderAggregation.OrderItemAggregation", "Order")
                        .WithMany("OrderedItems")
                        .HasForeignKey("OrderId");

                    b.HasOne("DmiConsulting.Eshop.Core.Entities.Product", "OrderedProduct")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderedProductId");
                });

            modelBuilder.Entity("DmiConsulting.Eshop.Core.Entities.Product", b =>
                {
                    b.HasOne("DmiConsulting.Eshop.Core.Entities.ProductCategory", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryName");
                });
#pragma warning restore 612, 618
        }
    }
}
